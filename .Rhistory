library(treeducken)
?sim_locustree_bdp
?calculate_expected_leaves_locustree
compare_mean_leaf_number <- function(tree_set,
gene_birth_rate,
gene_death_rate,
fixed_depth){
speciesTree <- treeducken::sim_sptree_bdp_time(sbr = 0.1,
sdr = 0.05,
numbsim = 1,
t = fixed_depth)
numberSpeciesTips <- length(speciesTree$tip.label)
locusTreeSet <- treeducken::sim_locustree_bdp(species_tree = speciesTree,
gbr = gene_birth_rate,
gdr = gene_death_rate,
lgtr = 0.0,
num_loci = 10000)
expectedValue <- treeducken::calculate_expected_leaves_locustree(t = fixed_depth,
dup_rate = gene_birth_rate,
loss_rate = gene_death_rate,
num_species = numberSpeciesTips)
vectorOfNumberLoci <- vector(length = 10000)
for(i in 1:10000){
vectorOfNumberLoci[i] <- length(locusTreeSet[[i]]$tip.label)
}
(mean(vectorOfNumberLoci) - expectedValue) / sqrt(var(vectorOfNumberLoci))
}
source('~/projects/r_projects/treeduckenValidation/R/locus_test.R', echo=TRUE)
compare_mean_leaf_number(0.1, 0.04, 2.0)
source('~/projects/r_projects/treeduckenValidation/R/locus_test.R', echo=TRUE)
compare_mean_leaf_number(0.1, 0.04, 2.0)
source('~/projects/r_projects/treeduckenValidation/R/locus_test.R', echo=TRUE)
compare_mean_leaf_number(0.1, 0.04, 2.0)
source('~/projects/r_projects/treeduckenValidation/R/locus_test.R', echo=TRUE)
compare_mean_leaf_number(0.1, 0.04, 2.0)
source('~/projects/r_projects/treeduckenValidation/R/locus_test.R', echo=TRUE)
compare_mean_leaf_number(0.1, 0.04, 2.0)
?treeducken::calculate_expected_leaves_sptree
source('~/projects/r_projects/treeduckenValidation/R/sptree_tests.R', echo=TRUE)
compare_sptree_mean_leaf_number(0.1,0.05,1.0,10000)
?treeducken::sim_sptree_bdp
?treeducken::estimate_node_heights
?ape::node.depth
source('~/projects/r_projects/treeduckenValidation/R/sptree_tests.R', echo=TRUE)
compare_sptree_node_depth(0.1,0.05,50,10000)
?TreeSim
??TreeSim
source('~/projects/r_projects/treeduckenValidation/R/sptree_tests.R', echo=TRUE)
source('~/projects/r_projects/treeduckenValidation/R/sptree_tests.R', echo=TRUE)
compare_sptree_node_depth(0.1,0.05,50,10000)
source('~/projects/r_projects/treeduckenValidation/R/sptree_tests.R', echo=TRUE)
compare_sptree_node_depth(0.1,0.05,50,10000)
source('~/projects/r_projects/treeduckenValidation/R/sptree_tests.R', echo=TRUE)
compare_sptree_node_depth(0.1,0.05,50,10000)
source('~/projects/r_projects/treeduckenValidation/R/sptree_tests.R', echo=TRUE)
compare_sptree_node_depth(0.1,0.05,50,10000)
?TreeSim
View(compare_mean_leaf_number)
library(treeducken)
library(treeduckenValidation)
reps <- 1000
speciation_rates <- c(2.0, 4.0)
extinction_rates <- speciation_rates / 2
tip_numbers <- c(40, 400)
speciation_test_1_df <- matrix(nrow = reps, ncol = 8)
k <- 1
for(i in 1:length(speciation_rates)){
for(j in 1:length(tip_numbers)) {
speciation_test_1_df[1:reps,k] <- get_sptree_leaf_number_dist(speciation_rates[i],
extinction_rates[i],
tip_numbers[j],
reps = reps)
k <- k + 1
treesim_trees <- TreeSim::sim.bd.taxa(n = tip_numbers[j],
lambda = speciation_rates[i],
mu = extinction_rates[i],
numbsim = reps)
for(t in 1:length(treesim_trees)) {
speciation_test_1_df[t, k] <- max(ape::node.depth.edgelength(treesim_trees[[t]]))
}
k <- k + 1
}
}
colnames(speciation_test_1_df) <- c("spec_rate 2.0, 40 tips - TD",
"spec_rate 2.0, 40 tips - TreeSim",
"spec_rate 2.0, 400 tips - TD",
"spec_rate 2.0, 400 tips - TreeSim",
"spec_rate 4.0, 40 tips - TD",
"spec_rate 4.0, 40 tips - TreeSim",
"spec_rate 4.0, 400 tips - TD",
"spec_rate 4.0, 400 tips - TreeSim")
speciation_test_1_df <- as.data.frame(speciation_test_1_df)
melted_df <- reshape2::melt(speciation_test_1_df)
spec_rate_and_tips <- rep(c("2.0, 40",
"2.0, 400",
"4.0, 40",
"4.0, 400"),
each = nrow(melted_df)/4, length.out = nrow(melted_df))
melted_df$"spec_rate_and_tips" <- factor(spec_rate_and_tips)
simulator_type <- rep(c("treeducken", "TreeSim"), each = nrow(melted_df)/8)
length(simulator_type)
simulator_type <- c(simulator_type, simulator_type, simulator_type, simulator_type)
melted_df$"simulator" <- simulator_type
library(ggplot2)
ggplot(data = melted_df, aes(x = factor(spec_rate_and_tips), y = value, fill = simulator)) + geom_violin() + theme_bw() + xlab("Speciation Rate and Tip Number") + ylab("Node Depth")
reps <- 1000
speciation_rates <- c(2.0, 4.0)
extinction_rates <- speciation_rates / 2
sim_age <- c(2.0, 4.0)
speciation_test_2_df <- matrix(nrow = reps, ncol = 8)
k <- 1
for(i in 1:length(speciation_rates)){
for(j in 1:length(sim_age)) {
speciation_test_2_df[1:reps,k] <- get_sptree_leaf_number_dist_time(speciation_rates[i],
extinction_rates[i],
time = sim_age[j],
reps = reps)
k <- k + 1
treesim_trees <- TreeSim::sim.bd.age(age = sim_age[j],
lambda = speciation_rates[i],
mu = extinction_rates[i],
numbsim = reps)
for(t in 1:length(treesim_trees)) {
speciation_test_2_df[t, k] <- length(treesim_trees[[t]][2])
}
k <- k + 1
}
}
install.pacakges("reticulate")
install.packages("reticulate")
